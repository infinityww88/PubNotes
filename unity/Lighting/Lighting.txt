Lights are an essential part of every scene
Meshes and textures define the shape and look of a scene, lights define the color and mood of your 3D environment
You’ll likely work with more than one light in each scene
Making them work together requires a little practice but the results can be quite amazing

By simply changing the Color of a light, you can give a whole different mood to the scene.

Unity supports different Rendering Paths. These paths affect mainly Lights and Shadows

Broadly speaking, lighting in Unity can be considered as either ‘realtime’ or ‘precomputed’ in some way and both techniques can be used in combination to create immersive scene
 lighting.

 Unfortunately, the light rays from Unity’s realtime lights do not bounce when they are used by themselves.
 In order to create more realistic scenes using techniques such as global illumination we need to enable Unity’s precomputed lighting solutions.

 Baked lightmaps
 Unity can calculate complex static lighting effects (using a technique called global illumination, or GI) and store them in a reference texture map called a lightmap
. This calculation process is referred to as baking.
When baking a lightmap, the effects of light sources on static objects in the scene are calculated and the results are written to textures which are overlaid on top of scene geometry to create the effect of lighting.
These lightmaps can include both the direct light which strikes a surface and also the indirect light that bounces from other objects or surfaces within the scene. 

With baked lighting, these lightmaps cannot change during gameplay and so are referred to as ‘static’. 
Realtime lights can be overlaid and used additively on top of a lightmapped scene but cannot interactively change the lightmaps themselves.

Precomputed realtime global illumination
With this approach it is possible to create lit environments featuring rich global illumination with bounced light which responds, in realtime, to lighting changes. A good example of this would be a time of day system - where the position and color of the light source changes over time. With traditional baked lighting, this is not possible.
Precomputing shifts the burden of calculating complex light behaviour from something that happens during gameplay, to something which can be calculated when time is no longer so critical. We refer to this as an ‘offline’ process.

Lighting Window
The main control point for Unity’s Global Illumination (GI) features
Although GI in Unity gives good results with default settings, the Lighting window’s properties allow you to adjust many aspects of the GI process, to customise your Scene or optimise for quality, speed and storage space as you need. This window also includes settings for ambient light, halos, cookies and fog.

Scene tab: settings apply to the overall Scene rather than individual GameObjects
Global maps tab: shows all of the lightmap Asset files generated by the GI lighting process.
Object maps tab: shows previews of GI lightmap textures (including shadow masks) for the currently selected GameObject.

Auto Generate: Unity updates lightmap data as you edit the Scene. 
Generate Lighting: trigger lightmap updates when you need them

Environment
Skybox Material: 在场景中任何物体之后，模拟天空或远处背景
Sun Source：procedural skybox使用此属性指定一个directional light gameobject指示太阳（或任何远距离的平行光源）的方向
Environment Lighting：环境光
