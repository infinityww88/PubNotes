Splines，CinemachineCamera，Feel，SensorToolkit，UIToolkit，AllInOneEffects，DOTween，UniTask。

取代基本低级的 Unity 模块，将这些高级模块作为 Unity 工程的基本 Blocks。无论做什么游戏，都不要嫌复杂，即使对简单的场景也要使用，因为要将这些 block 作为日常工作的基础，因此要经常熟悉它们。可以想象为没有了原本基础低级的 Unity 模块，只有这些高级模块，所有工作都使用这些高级模块来完成，就好像这些工作原本就是用这些 block 完成的一样。

所有高级、强健的插件都应如此，都应作为 Untiy 工程的基础 blocks，所有工作都尽可能使用它们完成。只有它们无法实现的，再使用 Unity 低级原生的方式实现。

一定要将这些强大稳健的 package 作为基础设施。无论做什么项目，都将它们导入，作为基础构造块，无论简单、还是复杂的任务，都尽可能用它们完成。这涉及一个很重要的问题，就是做一件事情应该有且只有一种方法。将它们作为基础构造块使用，可以强制熟悉它们，这样以后无论做什么都可以用它们很方便的完成，将工具标准化，不用再考虑应该使用哪个工具。如果还想着用低级、原始功能来实现，就会出现心智负担，要同时记忆两种方式的使用方法，而且在每次要做一个东西的时候，都面临应该使用哪个的抉择。

无论是编程开发，3D 建模，渲染，特效，甚至现实世界中的雕刻，完成一件作品、一个项目，都遵循相同的规则，就是整个过程是有多个 pass（layer）构成的，而不是一遍从头到尾推过去，在一个 pass 把事情都做完。

每个 pass 都完成某个方面的特定任务，最终整个作品、项目就是由这一遍一遍（或一层一层 layer）的结果复合而成的。例如 sfx 就是一层一层 layer 构成，每一层都是一个 pass，完成特定任务，最终画面由所有 layer 综合构成。

这样每一遍都完成某个专一的任务，可以保持上下文，效率更高，不必因为完成不同的任务而切换上下文。

通常由第一遍、或前几遍构造整个任务的基础，后面一遍一遍都是在之前的基础上不断加精。尤其是第一遍，通常是非常简单的任务，不仅作为整个项目的基础，还因为它的简单，可以作为 kick off，成为破局点，提升信心，让你感受到项目是一遍一遍完成的，免去对整个项目复杂度的恐惧而导致的束手不前。每一遍都在完成足够简单，在你控制能力之内的事情。

3D 建模也是如此，第一遍不追求外形严格匹配，只追求模型拓扑结构正确，相应的部分都有点线面即可。然后第二遍再精细调整点线面，让模型更接近理想的形状。不要一遍就追求模型外形精确，否则就会因为繁重的工作量产生畏惧心理，要确保每一遍要完成的任务都要足够简单，在控制能力之内。

